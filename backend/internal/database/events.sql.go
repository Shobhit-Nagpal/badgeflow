// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: events.sql

package database

import (
	"context"
)

const getEventsByUserID = `-- name: GetEventsByUserID :many
SELECT id, name, created_at, scheduled_at, user_id FROM events
WHERE user_id = $1
`

func (q *Queries) GetEventsByUserID(ctx context.Context, userID string) ([]Event, error) {
	rows, err := q.db.QueryContext(ctx, getEventsByUserID, userID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Event
	for rows.Next() {
		var i Event
		if err := rows.Scan(
			&i.ID,
			&i.Name,
			&i.CreatedAt,
			&i.ScheduledAt,
			&i.UserID,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
