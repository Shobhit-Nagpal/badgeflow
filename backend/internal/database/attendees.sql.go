// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: attendees.sql

package database

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const createAttendee = `-- name: CreateAttendee :one
INSERT INTO attendees 
  (id, name, created_at, email) 
VALUES 
  ($1, $2, $3, $4) 
RETURNING id, name, created_at, email
`

type CreateAttendeeParams struct {
	ID        uuid.UUID
	Name      string
	CreatedAt time.Time
	Email     string
}

func (q *Queries) CreateAttendee(ctx context.Context, arg CreateAttendeeParams) (Attendee, error) {
	row := q.db.QueryRowContext(ctx, createAttendee,
		arg.ID,
		arg.Name,
		arg.CreatedAt,
		arg.Email,
	)
	var i Attendee
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.CreatedAt,
		&i.Email,
	)
	return i, err
}

const getAttendeeByEmail = `-- name: GetAttendeeByEmail :one
SELECT id, name, created_at, email FROM attendees
WHERE email = $1
`

func (q *Queries) GetAttendeeByEmail(ctx context.Context, email string) (Attendee, error) {
	row := q.db.QueryRowContext(ctx, getAttendeeByEmail, email)
	var i Attendee
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.CreatedAt,
		&i.Email,
	)
	return i, err
}
